#!/usr/bin/python

from sys import argv

script, filename = argv

samples = ["ab","ade","ades2","ades3","ades4","alex","alphabet","amencutup",
           "armora","arp","arpy","auto","baa","baa2","bass","bass0","bass1",
           "bass2","bass3","bassdm","bassfoo","battles","bd","bend","bev","bin",
           "birds3","bleep","blip","blue","bottle","breaks125","breaks152",
           "breaks152loud","breaks152louder","breaks157","breaks165","breath",
           "bubble","can","casio","cc","chin","chink","circus","clak","click","co",
           "cosmicg","cp","cr","crow","d","db","diphone","diphone2","dist","dork2",
           "dorkbot","dr","dr2","dr55","dr_few","drum","drumtraks","e","east",
           "electro1","erk","f","feel","feelfx","fest","fire","flick","foo","fuckable",
           "future","gab","gabba","gabbaloud","gabbalouder","glasstap","glitch",
           "glitch2","gretsch","h","hand","hardcore","haw","hc","hh","hh27","hit",
           "hmm","ho","house","ht","if","ifdrums","incoming","industrial","insect",
           "invaders","jazz","jungbass","jungle","jvbass","koy","kurt","latibro",
           "led","less","lighter","lt","made","made2","mash","mash2","metal",
           "miniyeah","moan","monsterb","moog","mouth","mp3","msg","mt","newnotes",
           "noise","noise2","notes","numbers","oc","odx","off","pad","padlong",
           "pebbles","perc","peri","pluck","print","printshort","proc","procshort",
           "psr","rave","rave2","ravemono","rm","sax","seawolf","sequential","sf"
           "sheffield","short","sid","sine","sitar","sn","sound","space","speech",
           "speechless","speedupdown","stab","stomp","subroc3d","sugar","sundance",
           "tabla","tabla2","tablex","tacscan","tech","techno","tink","tok","toys",
           "trump","ul","ulgab","uxay","voodoo","wind","wobble","world","xmas","yeah"]

assign = ["|","=","\n",":","\t"]
on = ["-","_","~","1","on"]
off = [" ","0","off"]

tokens = []
sound = ""

with open(filename,"r") as CMK_input: 
    tokenizer = CMK_input.read()
    for t in tokenizer:
        t = t.lower()
        if t in assign:
            if sound != "":
                tokens.append(sound)
                sound = ""
                continue
            else:
                continue
        sound = sound + t
    sound = ""

textW = open("LiveCode.ck","w")

textW.write("//autogenerated CHmUsiCK file from CMKlang\n\nGain gate => dac;\n\n")

channels = []
header = ""
files = ""

for i,j in enumerate(tokens):
    if j == "clean":
        with open("CMKbridge","w"):
            tokens.pop(i)
            pass       
    if j in samples:
        head = "Sampler d%i => gate;\n" %i
        text = "d%i.file(\"%s\");\n" %(i,j)
        files = files + text
        header = header + head
        channels.append("d%i"%(i)) 
        tokens.pop(i)
textW.write(header+"\n")    
textW.write(files+"\n")
    
pattern = ""
        
for i,j in enumerate(tokens):
    word = tokens[i]
    for e,c in enumerate(word):
        if c == " " and e < (len(word)-1):
            pattern = pattern + "0,"
        elif c == " " and e == (len(word)-1):
            pattern = pattern + "0"
        elif c == "-" and e < (len(word)-1):
            pattern = pattern + "1,"
        elif c == "-" and e == (len(word)-1):
            pattern = pattern + "1"
        text = "spork~%s.sound([%s]);\n" %(channels[i],pattern)
    textW.write(text)
    pattern = ""

textW.write("\nday => now;")
    
textW.close()            

